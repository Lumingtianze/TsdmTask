name: Build and Release

on:
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch: [amd64, arm64]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      run: |
        GOOS=linux GOARCH=${{ matrix.goarch }} go build -ldflags="-s -w" -o TsdmTask-linux-${{ matrix.goarch }} ./...

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: TsdmTask-linux-${{ matrix.goarch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: binaries

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset amd64
      id: upload-release-asset-amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./TsdmTask-linux-amd64
        asset_name: TsdmTask-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Release Asset arm64
      id: upload-release-asset-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./TsdmTask-linux-arm64
        asset_name: TsdmTask-linux-arm64
        asset_content_type: application/octet-stream
